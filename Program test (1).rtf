{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 using System;\
\
namespace TestProjectAS_1\
\{\
    class MainClass\
    \{\
        public static void Main(string[] args)\
        \{\
            Console.WriteLine("Hello World!");\
\
            Administrator admin = new Administrator("TEST2","Luc","23209@gmail.com","azerty",23209);\
            \
            admin.displayFeeInfo();\
            admin.updateFee(6000);\
            admin.updateFee(5000);\
            admin.displayFeeInfo();\
            \
\
            Console.WriteLine(admin.PersonalInformation());\
            Console.WriteLine(admin.PublicInformation());\
        \}\
    \}\
\}\
\
\
\
\
\
\
\
\
using System;\
using System.Collections.Generic;\
\
namespace TestProjectAS_1\
\{\
    public class Faculty\
    \{\
        List<User> allTheFaculty \{ get; set; \}\
\
        //List<Student> allTheStudents;\
        //List<FacultyMember> allTheTeachers;\
\
        public Faculty(List<User> allTheFaculty /* List<Student> allTheStudents, List<FacultyMember> allTheTeachers */ )\
        \{\
            this.allTheFaculty = allTheFaculty;\
            // this.allTheStudents = allTheStudents; this.allTheTeachers = allTheTeachers;\
        \}\
    \}\
\}\
\
\
\
\
\
\
\
\
\
\
using System;\
namespace TestProjectAS_1\
\{\
    public abstract class User\
    \{\
        public string lastName \{ get; \}\
        public string firstName \{ get; \}\
        public string login \{ get; \}\
        public string password \{ get; \}\
        public int userID \{ get; \}\
\
        public User(string lastName, string firstName, string login, string password, int userID)\
        \{\
            this.lastName = lastName;\
            this.firstName = firstName;\
            this.login = login;\
            this.password = password;\
            this.userID = userID;\
        \}\
\
        public string PublicInformation()\
        \{\
            return $" The public information are : \\n First Name : \{firstName\} \\n Last Name : \{lastName\} \\n ID : \{userID\} \\n";\
        \}\
        public string PersonalInformation()\
        \{\
            return $"Your personal information are : \\n First Name : \{firstName\} \\n Last Name : \{lastName\} \\n ID : \{userID\} \\n e-mail : \{login\} \\n password : \{password\} \\n";\
        \}\
\
        //Creer des fonctions qui permettent de savoir en fonction infos si appartient \'e0 list student...\
    \}\
\}\
\
\
\
\
\
\
\
\
\
\
\
\
\
using System;\
using System.Collections.Generic;\
\
namespace TestProjectAS_1\
\{\
    public class Administrator : User\
    \{\
        // For the Fees\
        public double amount \{ get; set; \}\
        public DateTime deadline \{ get; set; \}\
        public SortedList<DateTime,double> amountMemory \{ get; set; \} \
        \
        public Administrator(string lastName, string firstName, string email, string password, int userID): base(lastName, firstName, email, password, userID)\
        \{\
\
            deadline = new DateTime(2021, 8, 1);\
            amount = 7800;\
            amountMemory=new SortedList<DateTime, double>();\
        \}\
\
        public void displayFeeInfo()\
        \{\
            string answer = $" The amount of the fee is \{amount\} euros. You have to pay it before \{deadline\} \\n";\
            \
            answer += " The memory of your amount is : \\n";\
            foreach (KeyValuePair<DateTime, double> memory in amountMemory)\
            \{\
                answer += "-> You paid " + memory.Value + " euros the "+memory.Key+" \\n";\
            \}\
            \
            Console.WriteLine(answer);\
        \}\
\
        public void updateFee(double newFee)\
        \{\
            amountMemory.Add(DateTime.Now, amount-newFee);\
            amount = newFee;\
            Console.WriteLine("The new fee is "+amount);\
        \}\
\
\
\
\
    \}\
\}\
}